class Solution {
public:
int solve(string &s,int i,int j,vector<vector<int>>&dp)
{
    if(i>j)
    {
        return 0;
    }
    if(dp[i][j]!=-1)
    {
        return dp[i][j];
    }
    if(i==j)
    {
        return dp[i][j]=1;
    }
    if(s[i]==s[j])
    {
        dp[i][j]=2+solve(s,i+1,j-1,dp);
    }
    else
    {
        int op1=solve(s,i+1,j,dp);
        int op2=solve(s,i,j-1,dp);
        dp[i][j]=max(op1,op2);
    }
    return dp[i][j];
}
    int longestPalindromeSubseq(string s) {
        int n=s.size();
        vector<vector<int>>dp(n+1,vector<int>(n+1,-1));
        return solve(s,0,n-1,dp);
    }
};
