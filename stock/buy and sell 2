class Solution {
public:
int solve(vector<int> &prices,int buy ,int i,int n,vector<vector<int>>&dp)
{
    if(i==n)
    {
        return 0;
    }
     if(dp[i][buy] != -1)
     {
          return dp[i][buy];
     }
    int profit=0;
    if(buy==0)
    {
        profit=max(solve(prices,0,i+1,n,dp),-prices[i]+solve(prices,1,i+1,n,dp));
    }
    else
    {
        profit=max(solve(prices,1,i+1,n,dp),solve(prices,0,i+1,n,dp)+prices[i]);
    }
    dp[i][buy]=profit;
    return dp[i][buy];
}
    int maxProfit(vector<int>& prices) {
        int n=prices.size();
        vector<vector<int>>dp(prices.size()+1, vector<int>(2, -1));
        return solve(prices,0,0,n,dp);

    }
};
