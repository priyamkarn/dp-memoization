class Solution {
public:
    

long getAns(vector<int>&Arr, int ind, int buy, int n, vector<vector<long>> &dp ){

    if(ind==n) return 0; //base case
    
    if(dp[ind][buy]!=-1)
        return dp[ind][buy];
        
    long profit;
    
    if(buy==0){//buy
        profit = max(0+getAns(Arr,ind+1,0,n,dp), -Arr[ind] + getAns(Arr,ind+1,1,n,dp));
    }
    
    if(buy==1){//sell
        profit = max(0+getAns(Arr,ind+1,1,n,dp), Arr[ind] + getAns(Arr,ind+1,0,n,dp));
    }
    
    return dp[ind][buy] = profit;
}



    int maxProfit(vector<int>& prices) {
        int n = prices.size();
          vector<vector<long>> dp(n,vector<long>(2,-1));
    return getAns(prices,0,0,n,dp);

        
        
    }
};
