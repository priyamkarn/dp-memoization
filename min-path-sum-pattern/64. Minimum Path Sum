class Solution {
public:
int solve(int i,int j,int r,int c,vector<vector<int>>&grid,vector<vector<int>>&dp)
{
    if(dp[i][j]!=-1)
    {
        return dp[i][j];
    }
    if(i==r-1 && j==c-1)
    {
        return dp[i][j]=grid[i][j];
    //    jab last cell me hoge to sirf grid[i][j] lege kyuki usse aage nhi ///////jaana h.
    }
    if(i>=r || j>=c)
    {
        return INT_MAX;
    }
    dp[i][j]=grid[i][j]+min(solve(i+1,j,r,c,grid,dp),solve(i,j+1,r,c,grid,dp));
    return dp[i][j];
}
    int minPathSum(vector<vector<int>>& grid) {

        int r=grid.size();
        int c=grid[0].size();
        vector<vector<int>>dp(r+1,vector<int>(c+1,-1));
        return solve(0,0,r,c,grid,dp);
    }
};
