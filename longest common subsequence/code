class Solution {
public:
int solve(string &s,string &p,int n,int m,vector<vector<int>>&dp)
{
    if(n==0 || m==0)
    {
        return 0;
    }
    if(dp[n][m]!=-1)
    {
        return dp[n][m];
    }
    if(s[n-1]==p[m-1])
    {
        dp[n][m]=1+solve(s,p,n-1,m-1,dp);
    }
    else
    {
    int op1=solve(s,p,n-1,m,dp);
    int op2=solve(s,p,n,m-1,dp);
    dp[n][m]=max(op1,op2);
    }
    return dp[n][m];
}
    int longestCommonSubsequence(string text1, string text2) {
        int n=text1.size();
        int m=text2.size();
        vector<vector<int>>dp(n+1,vector<int>(m+1,-1));
        return solve(text1,text2,n,m,dp);
    }
};
