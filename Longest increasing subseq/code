class Solution {
public:
int solve(vector<int> & a,int i,int n,int prev,vector<vector<int>>&dp)
    {
        if(i>=n)
        {
            return 0;
        }
        if(dp[i][prev+1]!=-1)
        {
            return dp[i][prev+1];
        }
        int op1=0;
        if(prev==-1 ||a[prev]<a[i])
        {
            op1=max(op1,1+solve(a,i+1,n,i,dp));
        }
        int op2=solve(a,i+1,n,prev,dp);
        dp[i][prev+1]=max(op1,op2);
        return dp[i][prev+1];
    }
    int lengthOfLIS(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int>>dp(n+1,vector<int>(n+1,-1));
        return solve(nums,0,n,-1,dp);
    }
};
